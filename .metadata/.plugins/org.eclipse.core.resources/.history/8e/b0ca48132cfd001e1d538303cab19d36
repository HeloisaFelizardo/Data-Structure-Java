/*
 * IsFull (V)
1. se topo = |V|
2. retorna VERDADEIRO
3. senão
4. retorna FALSO

Push (x, V)
1. se ! IsFull (V)
2. V [topo] ← x
3. topo ← topo + 1
4. senão
5. erro overflow

IsEmpty ()
1. se topo = 0
2. retorna VERDADEIRO
3. senão
4. retorna FALSO

Pop (V)
1. se ! IsEmpty ()
2. x ← V [topo]
3. topo ← topo – 1
4. retorna x
5. senão
6. erro underflow
 */

package entities;

public class Stack {
	private int[] stack;
    private int head;    
    private int capacity;
    
    public Stack(int k) {
    	capacity = k;
    	stack = new int[capacity]; 
    	head = 0;
    }
    
    public boolean isFull() {
    	return head == stack.length;
    }
}
