
package entities;
public class CircularQueue {
    private int[] queue;
    private int head;
    private int tail;
    private int capacity;

    public CircularQueue(int k) {
        capacity = k;
        queue = new int[capacity];
        head = -1;
        tail = -1;
    }

    public boolean enqueue(int value) {
        if (isFull()) {
            return false;
        }
        tail = (tail + 1) % capacity;
        queue[tail] = value;
        if (head == -1) {
            head = tail;
        }
        return true;
    }

    public boolean dequeue() {
        if (isEmpty()) {
            return false;
        }
        if (head == tail) {
            head = -1;
            tail = -1;
        } else {
            head = (head + 1) % capacity;
        }
        return true;
    }

    public boolean isFull() {
        return ((tail + 1) % capacity) == head;
    }

    public boolean isEmpty() {
        return head == -1;
    }
}
